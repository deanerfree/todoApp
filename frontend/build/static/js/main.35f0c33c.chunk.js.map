{"version":3,"sources":["components/LoadingContent.js","components/DisplayTodoContent.js","components/SelectTodoItem.js","components/TodoList.js","components/TodoContent.js","App.js","reportWebVitals.js","index.js"],"names":["LoadingContent","Card","style","height","CardContent","padding","display","justifyContent","DisplayTodoContent","type","item","className","Typography","SelectTodoItem","itemId","removeItem","getCurrentList","options","value","currentDate","Date","useState","estimatedTime","setEstimatedTime","createDate","setCreateDate","updatedDate","setUpdatedDate","finishedDate","setFinishedDate","task","setTask","description","setDescription","timeOnTask","setTimeOnTask","status","setStatus","createTask","setCreateTask","editDescription","setEditDescription","editStatus","setEditStatus","actionType","initialValues","time","handleRadioChange","e","target","changeTask","changeDescription","changeEditStatus","estTimeInSec","est","message","Math","floor","getItems","id","a","axios","get","results","returnedResults","data","console","log","dateCreated","error","useEffect","backgroundColor","onSubmit","values","setSubmitting","resetForm","dateUpdated","dateFinished","dtSt","dtFn","tmtsk","overUnder","diffToSec","moment","diff","toFixed","taskCompleted","patch","then","res","patchValues","handleChange","handleSubmit","isSubmitting","name","placeholder","onChange","component","rows","cols","FormControl","RadioGroup","row","defaultValue","FormControlLabel","control","Radio","label","onClick","Button","color","variant","disabled","fontSize","fontWeight","Edit","Close","editItem","TodoList","currentListItems","map","index","TodoContent","setCurrentListItems","theData","list","length","post","handleBlur","TextField","onBlur","marginBottom","fullWidth","multiline","delete","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35f0c33c.chunk.js","sourcesContent":["import { Card, CardContent } from \"@mui/material\"\n\nconst LoadingContent = () => {\n\treturn (\n\t\t<Card style={{ height: \"200px\" }}>\n\t\t\t<CardContent\n\t\t\t\tstyle={{\n\t\t\t\t\tpadding: \"12%\",\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t}}>\n\t\t\t\tThere's no content loaded\n\t\t\t</CardContent>\n\t\t</Card>\n\t)\n}\n\nexport default LoadingContent\n","import { Typography } from \"@mui/material\"\n\nconst DisplayTodoContent = ({ type, item }) => {\n\treturn (\n\t\t<div className='editField'>\n\t\t\t<Typography>\n\t\t\t\t{type}: {item}\n\t\t\t</Typography>\n\t\t</div>\n\t)\n}\n\nexport default DisplayTodoContent\n","import { useEffect, useState } from \"react\"\nimport \"../App.css\"\nimport axios from \"axios\"\nimport { Field, Formik } from \"formik\"\nimport {\n\tButton,\n\tCard,\n\tTypography,\n\tRadio,\n\tRadioGroup,\n\tFormControl,\n\tFormControlLabel,\n\tCardContent,\n} from \"@mui/material\"\nimport { Edit, Close } from \"@mui/icons-material\"\n\nimport LoadingContent from \"./LoadingContent\"\nimport DisplayTodoContent from \"./DisplayTodoContent\"\nimport moment from \"moment\"\n\nconst SelectTodoItem = ({ itemId, removeItem, getCurrentList }) => {\n\tconst options = [\n\t\t{ value: \"Planned\" },\n\t\t{ value: \"In Process\" },\n\t\t{ value: \"Completed\" },\n\t]\n\tconst currentDate = new Date()\n\tconst [estimatedTime, setEstimatedTime] = useState()\n\tconst [createDate, setCreateDate] = useState()\n\tconst [updatedDate, setUpdatedDate] = useState()\n\tconst [finishedDate, setFinishedDate] = useState()\n\tconst [task, setTask] = useState()\n\tconst [description, setDescription] = useState()\n\tconst [timeOnTask, setTimeOnTask] = useState()\n\tconst [status, setStatus] = useState(options[0].value)\n\tconst [createTask, setCreateTask] = useState(false)\n\tconst [editDescription, setEditDescription] = useState(false)\n\tconst [editStatus, setEditStatus] = useState(false)\n\n\tconst actionType = [\"Task\", \"Description\", \"Status\"]\n\n\tconst initialValues = {\n\t\tstatus: status,\n\t\ttask: \"\",\n\t\tdescription: \"\",\n\t\ttime: null,\n\t}\n\n\tconst handleUpdateDate = () => {\n\t\tsetUpdatedDate(currentDate)\n\t}\n\n\tconst handleFinishedDate = () => {\n\t\tsetFinishedDate(currentDate)\n\t}\n\n\tconst handleRadioChange = (e) => {\n\t\tsetStatus(e.target.value)\n\t}\n\n\tconst changeTask = () => {\n\t\tsetCreateTask(!createTask)\n\t}\n\tconst changeDescription = () => {\n\t\tsetEditDescription(!editDescription)\n\t}\n\tconst changeEditStatus = () => {\n\t\tsetEditStatus(!editStatus)\n\t}\n\n\tconst taskCompleted = (status, dtSt, dtFn, tmtsk, est) => {\n\t\tif (status !== \"Completed\") return tmtsk\n\t\tlet value = { time: 0, message: \"\", overUnder: \"\" }\n\t\tlet diff = moment(dtFn, \"DD/MM/YYYY HH:mm:ss\").diff(\n\t\t\tmoment(dtSt, \"DD/MM/YYYY HH:mm:ss\")\n\t\t)\n\t\tlet diffToSec = diff / 1000\n\t\tvalue.time = Math.floor(diffToSec)\n\t\tdiffToSec = value.time\n\n\t\tif (status === \"Completed\") {\n\t\t\tif (tmtsk.time > 0) {\n\t\t\t\tvalue.time = diffToSec + tmtsk.time\n\t\t\t\tdiffToSec = Math.floor(value.time)\n\t\t\t}\n\n\t\t\tif (diffToSec < 60) {\n\t\t\t\tvalue.message = `${diffToSec} seconds`\n\t\t\t}\n\t\t\tif (diffToSec >= 60) {\n\t\t\t\tvalue.message = `${(diffToSec / 60).toFixed(2)} minutes`\n\t\t\t}\n\t\t\tif (diffToSec >= 3600) {\n\t\t\t\tvalue.message = `${(diffToSec / 3600).toFixed(2)} hours`\n\t\t\t}\n\t\t\tif (diffToSec >= 86400) {\n\t\t\t\tvalue.message = `${(diffToSec / 86400).toFixed(2)} days`\n\t\t\t}\n\t\t}\n\t\tvalue.time = Math.floor(value.time)\n\t\tvalue.overUnder = estTimeInSec(est, value)\n\t\treturn value\n\t}\n\n\tconst estTimeInSec = (est, time) => {\n\t\tlet value = { time: 0, message: \"\" }\n\t\tvalue.time = est * 3600\n\n\t\tif (value.time > time.time) {\n\t\t\tvalue.message = \"Over Time\"\n\t\t}\n\t\tif (value.time < time.time) {\n\t\t\tvalue.message = \"Under Time\"\n\t\t}\n\t\tif (value.time === time.time) {\n\t\t\tvalue.message = \"On time\"\n\t\t}\n\t\tvalue.time = Math.floor(value.time)\n\t\treturn value\n\t}\n\n\tconst getItems = async (id) => {\n\t\ttry {\n\t\t\tlet results = await axios.get(`/v1/api/todoList/${id}`)\n\t\t\tlet returnedResults = results.data\n\t\t\tconsole.log(\"returned Results\", returnedResults)\n\t\t\tsetCreateDate(returnedResults.dateCreated)\n\t\t\t// setUpdatedDate(returnedResults.dateUpdated)\n\t\t\tsetTask(returnedResults.task)\n\t\t\tsetDescription(returnedResults.description)\n\t\t\tsetStatus(returnedResults.status)\n\t\t\tsetTimeOnTask(returnedResults.timeOnTask)\n\t\t\tsetEstimatedTime(returnedResults.time)\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\n\tconst patchValues = (id, values) => {\n\t\ttry {\n\t\t\taxios.patch(`/v1/api/editItem/${id}`, values).then((res) => res.data)\n\t\t} catch (error) {}\n\t}\n\n\tuseEffect(() => {\n\t\tgetItems(itemId)\n\n\t\t// eslint-disable-next-line\n\t}, [])\n\n\t// status, dtSt, dtFn\n\n\treturn (\n\t\t<Card\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: \"#aae0f9\",\n\t\t\t}}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, { setSubmitting, resetForm }) => {\n\t\t\t\t\tif (values.task === \"\") {\n\t\t\t\t\t\tvalues.task = task\n\t\t\t\t\t}\n\t\t\t\t\tif (values.description === \"\") {\n\t\t\t\t\t\tvalues.description = description\n\t\t\t\t\t}\n\t\t\t\t\tvalues.id = itemId\n\t\t\t\t\tvalues.status = status\n\t\t\t\t\tvalues.dateUpdated = updatedDate\n\t\t\t\t\tvalues.dateCreated = createDate\n\t\t\t\t\tvalues.time = estimatedTime\n\t\t\t\t\tvalues.dateFinished = finishedDate\n\t\t\t\t\tvalues.timeOnTask = taskCompleted(\n\t\t\t\t\t\tstatus,\n\t\t\t\t\t\tupdatedDate,\n\t\t\t\t\t\tfinishedDate,\n\t\t\t\t\t\ttimeOnTask,\n\t\t\t\t\t\testimatedTime\n\t\t\t\t\t)\n\t\t\t\t\tconsole.log(\"submitvalues:\", values)\n\t\t\t\t\tpatchValues(itemId, values)\n\t\t\t\t\tsetSubmitting(false)\n\t\t\t\t\tresetForm(initialValues)\n\t\t\t\t\tchangeTask()\n\t\t\t\t\tgetCurrentList()\n\t\t\t\t\tgetItems(itemId)\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\thandleChange,\n\t\t\t\t\thandleSubmit,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tresetForm,\n\t\t\t\t\t/* and other goodies */\n\t\t\t\t}) =>\n\t\t\t\t\ttask || description || status ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{createTask ? (\n\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t<Card className='form' onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>Task:</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\ttype='task'\n\t\t\t\t\t\t\t\t\t\t\t\tname='task'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={task}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.task}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>Estimated Time:</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='time'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={estimatedTime}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.estimatedTime}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>Description:</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\ttype='description'\n\t\t\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent='textarea'\n\t\t\t\t\t\t\t\t\t\t\t\trows={10}\n\t\t\t\t\t\t\t\t\t\t\t\tcols={40}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={description}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>Status: {status}</Typography>\n\n\t\t\t\t\t\t\t\t\t\t\t<FormControl component='fieldset'>\n\t\t\t\t\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='Task Status'\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue='Not Started'\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='radio-buttons-group'\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={status}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleRadioChange}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={options[0].value}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Planned'\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={options[1].value}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='In Process'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdateDate()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={options[2].value}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Complete'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleFinishedDate()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t\t<div className='buttonWrapper'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='buttonItems'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#1976d1\", color: \"white\" }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='buttonItems'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"red\", color: \"white\" }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='reset'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeTask()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tresetForm()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#c8eeff\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<div className='editField'>\n\t\t\t\t\t\t\t\t\t\t<div className='editIconTitle'>\n\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h1'\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: \"20px\", fontWeight: \"500\" }}>\n\t\t\t\t\t\t\t\t\t\t\t\t{task}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='editIcons'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='editIcon' onClick={changeTask}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Edit />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='editIcon' onClick={removeItem}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Card className='form'>\n\t\t\t\t\t\t\t\t\t\t<div className='displayItemStatus'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='displayItem'>\n\t\t\t\t\t\t\t\t\t\t\t\t<DisplayTodoContent\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={actionType[2]}\n\t\t\t\t\t\t\t\t\t\t\t\t\titem={status}\n\t\t\t\t\t\t\t\t\t\t\t\t\teditItem={changeEditStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{timeOnTask ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='estItems'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='estItem'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTime taken: {timeOnTask.message}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='estItem'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTime management: {timeOnTask.overUnder.message}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<DisplayTodoContent\n\t\t\t\t\t\t\t\t\t\t\ttype={actionType[1]}\n\t\t\t\t\t\t\t\t\t\t\titem={description}\n\t\t\t\t\t\t\t\t\t\t\teditItem={changeDescription}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t<div id='created'>Date Created: {createDate}</div>\n\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<LoadingContent />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Formik>\n\t\t</Card>\n\t)\n}\n\nexport default SelectTodoItem\n","import \"../App.css\"\n\nimport SelectTodoItem from \"./SelectTodoItem\"\n\nconst TodoList = ({ removeItem, currentListItems, getCurrentList }) => {\n\treturn (\n\t\t<div className='itemWrapper'>\n\t\t\t{currentListItems?.map((item, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div className='item' key={index}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<SelectTodoItem\n\t\t\t\t\t\t\t\titemId={item.id}\n\t\t\t\t\t\t\t\tgetCurrentList={getCurrentList}\n\t\t\t\t\t\t\t\tremoveItem={removeItem}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nexport default TodoList\n","import { useEffect, useState } from \"react\"\nimport \"../App.css\"\nimport axios from \"axios\"\nimport { Formik } from \"formik\"\nimport { Button, TextField, Card } from \"@mui/material\"\nimport LoadingContent from \"./LoadingContent\"\nimport TodoList from \"./TodoList\"\n\nconst TodoContent = () => {\n\tconst [currentListItems, setCurrentListItems] = useState([])\n\tconst currentDate = new Date()\n\n\tconst options = [\n\t\t{ status: \"Planned\" },\n\t\t{ status: \"In Process\" },\n\t\t{ status: \"Completed\" },\n\t]\n\n\tconst initialValues = {\n\t\tid: null,\n\t\tstatus: null,\n\t\ttask: \"\",\n\t\tdescription: \"\",\n\t\ttime: 0,\n\t\tdateCreated: 0,\n\t\tdateUpdated: 0,\n\t\tdateFinished: null,\n\t\ttimeOnTask: 0,\n\t}\n\n\tconst getCurrentList = async () => {\n\t\tconst theData = await axios.get(`/v1/api/todoList`)\n\t\ttry {\n\t\t\tif (theData.status === 200) {\n\t\t\t\tconst list = theData.data\n\t\t\t\tsetCurrentListItems(list)\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error({ message: `This is the Error`, error })\n\t\t}\n\t}\n\n\tconst removeItem = (id) => {\n\t\taxios.delete(`/v1/api/removeItem/${id}`).then((res) => res.data)\n\t\tgetCurrentList()\n\t}\n\n\tuseEffect(() => {\n\t\tgetCurrentList()\n\t}, [])\n\tconsole.log(currentListItems)\n\n\treturn (\n\t\t<div className='wrapper'>\n\t\t\t<div className='title'>\n\t\t\t\t<h2>Things To Get Done:</h2>\n\t\t\t</div>\n\t\t\t<Card className='formWrapper'>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\tonSubmit={(values, { setSubmitting, resetForm }) => {\n\t\t\t\t\t\tvalues.id = currentListItems.length\n\t\t\t\t\t\tvalues.status = options[0].status\n\t\t\t\t\t\tvalues.timeOnTask = 0\n\t\t\t\t\t\tvalues.dateCreated = currentDate\n\t\t\t\t\t\tvalues.dateUpdated = currentDate\n\t\t\t\t\t\tvalues.dateFinished = 0\n\n\t\t\t\t\t\taxios.post(\"/v1/api/createItem\", values)\n\t\t\t\t\t\tgetCurrentList()\n\t\t\t\t\t\tsetSubmitting(false)\n\t\t\t\t\t\tresetForm(initialValues)\n\t\t\t\t\t}}>\n\t\t\t\t\t{({\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t}) => (\n\t\t\t\t\t\t<form className='form' onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<div className='formInputs'>\n\t\t\t\t\t\t\t\t<div className='formShortInputs'>\n\t\t\t\t\t\t\t\t\t<div className='formShortInput'>\n\t\t\t\t\t\t\t\t\t\t<h2>Task</h2>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\ttype='task'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Task'\n\t\t\t\t\t\t\t\t\t\t\tname='task'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter a Task'\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.task}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='formShortInput'>\n\t\t\t\t\t\t\t\t\t\t<h2>Estimated time</h2>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter a time'\n\t\t\t\t\t\t\t\t\t\t\tid='outlined-multiline-static'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Estimated Time'\n\t\t\t\t\t\t\t\t\t\t\trows={0}\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\tname='time'\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.time}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: 50, marginBottom: \"35px\" }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h2>Description</h2>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter a description'\n\t\t\t\t\t\t\t\t\tid='outlined-multiline-static'\n\t\t\t\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\t\ttype='description'\n\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\t\tstyle={{ height: 100, marginBottom: \"35px\" }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='formSubmit'>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}>\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Card>\n\t\t\t<Card className='taskList'>\n\t\t\t\t{currentListItems.length > 0 ? (\n\t\t\t\t\t<TodoList\n\t\t\t\t\t\tgetCurrentList={getCurrentList}\n\t\t\t\t\t\tcurrentListItems={currentListItems}\n\t\t\t\t\t\tremoveItem={removeItem}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<LoadingContent />\n\t\t\t\t)}\n\t\t\t</Card>\n\t\t</div>\n\t)\n}\n\nexport default TodoContent\n","import \"./App\"\nimport TodoContent from \"./components/TodoContent\"\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<TodoContent />\n\t\t</div>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}